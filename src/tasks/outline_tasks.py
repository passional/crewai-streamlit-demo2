from crewai import Task

class OutlineTasks:
    def research_task(self, agent, topic, context=None):
        return Task(
            description=f"""
    1.  **信息吸收与提炼**: 仔细阅读并完全理解我提供的主题`topic`以及资料`context`。从这些零散的资料中，识别并提取出所有相关的核心概念、关键事实、重要数据、基本原理等知识要素。
    2.  **结构化组织**: 将所有提炼出的知识点，按照从基础到深入、从宏观到微观的逻辑关系进行分组和排序。请构建一个符合知识传递规律的结构，通常包括：
        *   引言与基本定义：对主题进行界定，提出核心概念。
        *   核心原理/机制：分点阐述主题的关键构成或运作方式。
        *   特性与影响：讲解主题表现出的特点及其带来的影响或应用。
        *   相关比较/延伸：与其他相关概念进行对比，或探讨其未来发展。
        *   总结：对核心知识点进行归纳。
    3.  **权重划分**: 对每一个知识点进行权重评估，并使用以下三种标签之一进行明确标记：
        *   **[重点解读]**: 这是内容的核心，是理解主题的关键，需要详细解释。
        *   **[标准讲解]**: 这是构成主体框架的必要知识点，需要清晰地说明白。
        *   **[简要提及]**: 这是补充性或背景性信息，可以一笔带过。
    4.  **生成大纲**: 基于以上的组织和权重划分，生成最终的内容大纲。
        **请特别注意：最终的大纲应严格聚焦于知识点本身，避免使用任何比喻、拟人、故事化或悬疑式的叙事包装（例如，避免使用‘悬案’、‘侦探’、‘线索’等词语）。你的任务是罗列事实和概念，而不是讲故事。**
    主题topic：`{topic}`
    资料context： `{context}`
            """,
            expected_output=f"""
    请输出一份**纯粹基于知识点组织**的Markdown格式化大纲。大纲应直接罗列知识要点，通过嵌套列表展示其逻辑层级，并在每个知识点前加上权重标签。**整体风格应是客观、严谨、结构化的，如同教科书的章节目录。**

    **视频主题:** {topic}

    **详细内容大纲:**
    (使用嵌套列表来展示内容的层级结构，并在每个知识点前加上权重标签)

    ---
    **示例格式 (以“黑洞”为例):**

    **视频主题:** 黑洞的物理学原理

    **详细内容大纲:**
    - 1. **引言与基本定义**
      - [标准讲解] 黑洞的定义：光及其他任何物质都无法逃逸的时空区域。
      - [标准讲解] 提出核心问题：我们如何间接观测到黑洞的存在。
    - 2. **黑洞的关键物理概念**
      - [重点解读] 事件视界 ：定义黑洞边界的“不可返回点”。
      - [重点解读] 史瓦西半径：计算事件视界大小的公式。
      - [标准讲解] 奇点 ：物质密度无限大、体积无限小的中心点。
    - 3. **黑洞的形成过程**
      - [标准讲解] 恒星的生命周期：简述恒星演化阶段。
      - [重点解读] 大质量恒星的引力坍缩：超新星爆发后，内核坍缩形成黑洞的过程。
    - 4. **黑洞对时空的影响**
      - [重点解读] 引力时间膨胀：靠近黑洞时时间流逝变慢的现象。
      - [标准讲解] 引力透镜效应：光线在黑洞引力场中的弯曲。
    - 5. **黑洞的现代研究**
      - [简要提及] 霍金辐射：黑洞并非“只进不出”的理论。
      - [简要提及] 事件视界望远镜：人类首次直接拍摄到黑洞的照片。
    - 6. **总结**
      - [标准讲解] 归纳黑洞的核心特性：极强的引力、事件视界、奇点。
            """,
            agent=agent
        )

    # def structure_task(self, agent, context_task):
    #     return Task(
    #         description="""
    #     1.  基于[task_synthesis]任务产出的“核心信息摘要”，开始构思视频的整体叙事流程。
    #     2.  设计一个强有力的“钩子”（Hook）作为视频开头，在30秒内抓住观众的注意力。
    #     3.  将核心论点和数据组织成一个有逻辑、层层递进的主体部分。
    #     4.  设计一个简洁明了的结论，总结视频核心价值。
    #     5.  在结尾处加入一个明确的“行为召唤”（Call to Action），例如“点赞、订阅”或“在评论区分享你的看法”。
    #         """,
    #         expected_output=f"""
    #         一份完整的YouTube视频内容大纲（Markdown格式），应严格遵循以下结构：
    #         -   **### 1. 视频标题建议 (3个选项):**
    #             -   标题1: ...
    #             -   标题2: ...
    #             -   标题3: ...
    #         -   **### 2. 开场 (0-30秒):**
    #             -   **钩子 (Hook):** [用一个问题或一个惊人的事实开头]
    #             -   **本期看点:** [简要说明这个视频将为观众解决什么问题或带来什么价值]
    #         -   **### 3. 主体部分 (按时间线):**
    #             -   **要点1:** [第一个核心论点，并注明此处应展示的关键数据/案例]
    #             -   **要点2:** [第二个核心论点，并注明此处应展示的关键数据/案例]
    #             -   **转折/深化:** [引入一个趣味事实或反转观点，增加视频趣味性]
    #             -   **要点3:** [第三个核心论点...]
    #         -   **### 4. 结论:**
    #             -   **核心信息回顾:** [用一两句话总结视频最重要的信息]
            
    #         """,
    #         agent=agent,
    #         context=[context_task]
    #     )

    # def refine_task(self, agent, context_task):
    #     return Task(
    #         description="""
    #     1.  从观众的角度审阅[task_drafting]产出的视频大纲。
    #     2.  评估开场的“钩子”是否足够强大，如果不够，请提出修改建议。
    #     3.  检查主体部分的逻辑流程是否顺畅，要点之间的过渡是否自然。
    #     4.  将复杂的术语或概念转化为更通俗易懂的语言。
    #         """,
    #         expected_output="一份经过优化和润色的最终版视频大纲（Markdown格式）。此版本应是“拍摄就绪”状态，语言精炼，结构完美，并可能在关键部分附有“优化建议”的批注。",
    #         agent=agent,
    #         context=[context_task]
    #     )